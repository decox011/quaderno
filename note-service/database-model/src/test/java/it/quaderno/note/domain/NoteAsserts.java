package it.quaderno.note.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NoteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoteAllPropertiesEquals(Note expected, Note actual) {
        assertNoteAutoGeneratedPropertiesEquals(expected, actual);
        assertNoteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoteAllUpdatablePropertiesEquals(Note expected, Note actual) {
        assertNoteUpdatableFieldsEquals(expected, actual);
        assertNoteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoteAutoGeneratedPropertiesEquals(Note expected, Note actual) {
        assertThat(actual)
            .as("Verify Note auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoteUpdatableFieldsEquals(Note expected, Note actual) {
        assertThat(actual)
            .as("Verify Note relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getContent()).as("check content").isEqualTo(expected.getContent()))
            .satisfies(a -> assertThat(a.getLinks()).as("check links").isEqualTo(expected.getLinks()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()))
            .satisfies(a -> assertThat(a.getUpdatedAt()).as("check updatedAt").isEqualTo(expected.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoteUpdatableRelationshipsEquals(Note expected, Note actual) {
        assertThat(actual)
            .as("Verify Note relationships")
            .satisfies(a -> assertThat(a.getTags()).as("check tags").isEqualTo(expected.getTags()));
    }
}
