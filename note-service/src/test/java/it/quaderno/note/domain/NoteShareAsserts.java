package it.quaderno.note.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NoteShareAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoteShareAllPropertiesEquals(NoteShare expected, NoteShare actual) {
        assertNoteShareAutoGeneratedPropertiesEquals(expected, actual);
        assertNoteShareAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoteShareAllUpdatablePropertiesEquals(NoteShare expected, NoteShare actual) {
        assertNoteShareUpdatableFieldsEquals(expected, actual);
        assertNoteShareUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoteShareAutoGeneratedPropertiesEquals(NoteShare expected, NoteShare actual) {
        assertThat(actual)
            .as("Verify NoteShare auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoteShareUpdatableFieldsEquals(NoteShare expected, NoteShare actual) {
        assertThat(actual)
            .as("Verify NoteShare relevant properties")
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()))
            .satisfies(a -> assertThat(a.getUpdatedAt()).as("check updatedAt").isEqualTo(expected.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNoteShareUpdatableRelationshipsEquals(NoteShare expected, NoteShare actual) {
        assertThat(actual)
            .as("Verify NoteShare relationships")
            .satisfies(a -> assertThat(a.getNote()).as("check note").isEqualTo(expected.getNote()));
    }
}
